// <auto-generated />
using System;
using AirMastera.Domain.Entities;
using AirMastera.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AirMastera.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AirMasteraDbContext))]
    partial class AirMasteraDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "repair_status", new[] { "created", "work_in_process", "failed", "finished" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AirMastera.Infrastructure.Data.Models.CarDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("avatar");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("model");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("name");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("number");

                    b.Property<Guid>("PersonDbId")
                        .HasColumnType("uuid")
                        .HasColumnName("person_id");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("PersonDbId");

                    b.ToTable("car");
                });

            modelBuilder.Entity("AirMastera.Infrastructure.Data.Models.PersonDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fullname");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.ToTable("person");
                });

            modelBuilder.Entity("AirMastera.Infrastructure.Data.Models.RepairDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("appointment_date");

                    b.Property<Guid>("CarDbId")
                        .HasColumnType("uuid")
                        .HasColumnName("car_id");

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("part_name");

                    b.Property<string>("PartType")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("part_type");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<RepairStatus>("RepairStatus")
                        .HasColumnType("repair_status")
                        .HasColumnName("repair_status");

                    b.HasKey("Id");

                    b.HasIndex("CarDbId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("repair");
                });

            modelBuilder.Entity("AirMastera.Infrastructure.Data.Models.CarDb", b =>
                {
                    b.HasOne("AirMastera.Infrastructure.Data.Models.PersonDb", "PersonDb")
                        .WithMany("Cars")
                        .HasForeignKey("PersonDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonDb");
                });

            modelBuilder.Entity("AirMastera.Infrastructure.Data.Models.RepairDb", b =>
                {
                    b.HasOne("AirMastera.Infrastructure.Data.Models.CarDb", "CarDb")
                        .WithMany("Repairs")
                        .HasForeignKey("CarDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarDb");
                });

            modelBuilder.Entity("AirMastera.Infrastructure.Data.Models.CarDb", b =>
                {
                    b.Navigation("Repairs");
                });

            modelBuilder.Entity("AirMastera.Infrastructure.Data.Models.PersonDb", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
